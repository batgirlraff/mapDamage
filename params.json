{"name":"Mapdamage","tagline":"mapDamage: tracking and quantifying damage patterns in ancient DNA sequences","body":"Introduction\r\n------------\r\n\r\nmapDamage2 is a computational framework written in Python and R, which tracks and quantifies DNA damage patterns \r\namong ancient DNA sequencing reads generated by Next-Generation Sequencing platforms. \r\n\r\n\r\n### Requirements\r\n\r\n* Python (version >= 2.6)\r\n* [Git](http://git-scm.com/) \r\n* [R]([http://www.r-project.org/) (version >= 2.15.1) must be present in your $PATH. Otherwise, only tables will be produced.\r\n* [pysam](http://code.google.com/p/pysam/]) (version == 0.6) python package, an interface for reading/writing SAM/BAM files\r\n* [gsl](http://www.gnu.org/software/gsl/) GNU scientific library (GSL) \r\n* R libraries:\r\n - inline\r\n - gam\r\n - Rccp\r\n - RcppGSL\r\n - ggplot2 (>=0.9.2)\r\n\r\nOf note, the R libraries and the GSL library are only required for the statistical estimation of DNA damage \r\nparameters. seqtk is included in this package for fast computation of reference base composition, it is written by Heng Li\r\nand can be found at [here at github.](https://github.com/lh3/seqtk)\r\n\r\n\r\n### Installation\r\n\r\nmapDamage2 was successfully tested on GNU/Linux and MacOSX environments.\r\n\r\n1. Install mapDamage:  \r\nClone the repository from GitHub  \r\n`git clone https://github.com/ginolhac/mapDamage.git mapDamage`  \r\ngo into the resulting folder  \r\n`cd mapDamage`  \r\nthen clone the submodules.  \r\n`git submodule update --init`  \r\nRun the following command if you have administrator rights  \r\n`sudo python setup.py install`  \r\notherwise install it locally  \r\n`python setup.py install --user`  \r\nthen, $HOME/.local/bin must be in your PATH.\r\n\r\n2. Install pysam 0.6:  \r\nDownload the tarball archive for [pysam](http://code.google.com/p/pysam/downloads/list).\r\nUntar the downloaded tar file and follow instructions in the pysam-0.6/INSTALL text file.\r\n**It is important installing the specific version pysam 0.6 since we had issues with newer versions.**\r\nIt is recommend to check if the pysam installation seems okay before proceeding with the following command  \r\n`python -c \"import pysam\"`  \r\nIf nothing appears then proceed.\r\n\r\n3. Install R:  \r\nFollow the instructions available at [R project](http://www.r-project.org/)\r\n(with installers/packages available for all major operating systems).\r\n\r\n4. Install the R packages:  \r\nBy running in a R console and selecting a CRAN mirror:  \r\n`install.packages(\"inline\")`  \r\n`install.packages(\"gam\")`  \r\n`install.packages(\"Rcpp\")`  \r\n`install.packages(\"ggplot2\")` \r\n\r\n\r\n5. Install the  GSL library [gsl](http://www.gnu.org/software/gsl/):  \r\nFor Debian-based distros by the following.  \r\n`sudo apt-get install libgsl0-dev`  \r\nThere should be a equivalent package for Mac using fink or macports.\r\n\r\n\r\n6. Install RcppGSL:  \r\nIn a R session do the following   \r\n`install.packages(\"RcppGSL\")`  \r\nIf the installation of RcppGSL ended with an unsuccessfully then, download the tarball at [RcppGSL](http://cran.r-project.org/web/packages/RcppGSL/index.html) and install it with:   \r\n`install.packages(\"RcppGSL_0.2.0.tar.gz\")`\r\n\r\nNote that if steps 4-6 fail for some reason, then it is possible to utilize mapDamage without \r\nthe statistical function.\r\n\r\n---\r\n\r\nNews in version 2.0\r\n--------------------\r\n- The main new feature is the **approximate bayesian estimation of damage parameters**.\r\n- The --rescale parameter can be optionally used to rescale quality scores of likely damaged positions \r\nin the reads. A new BAM file is constructed by downscaling quality values for misincorporations likely \r\ndue to ancient DNA damage according to their initial qualities, position in reads and damage patterns.\r\n- The program was rewritten in python to make it simpler and the dependency on bedtools was replaced by the use of pysam.\r\nThe memory footprint is now negligible and runtime reduced by _ca._ 25%.\r\n- It is now possible to filter out nucleotides with qualities inferior to a threshold defined by users, \r\nallowing users to reduce the impact of sequencing errors when counting misincorporations.\r\n\r\n\r\nInputs\r\n------\r\n\r\nTwo files are needed:\r\n\r\n- A valid SAM/BAM file with a correct header, as argument to the **-i** option.\r\n- A FASTA file that contains reference sequences used for mapping reads, as argument to the **-r** option. \r\n\r\nReferences described in the SAM/BAM header and the FASTA file must be coherent, _i.e_,  \r\nthe references must have identical names and lengths. Extra sequences present in the FASTA header  \r\nraise a warning but the program will proceed since all needed references are available.\r\n\r\nAs an alternative, one can run only the plotting, statistic estimations or rescaling\r\non an already processed dataset. Use a combination of **-d** option followed by \r\na valid folder and the `--plot-only`, `--stats-only` or  `--rescale-only` options.\r\n\r\n\r\nOutputs\r\n-------\r\n\r\nWhen all options are activated, 15 files are produced in the result folder.\r\n\r\n- Runtime\\_log.txt, log file with a summary of command lines used and timestamps.\r\n\r\nFor the plotting:\r\n\r\n - a pdf file, Fragmisincorporation\\_plot.pdf that displays both fragmentation and misincorporation patterns.\r\n - a pdf file, Length\\_plot.pdf, that displays length distribution of singleton reads per strand and cumulative \r\n    frequencies of C>T at 5'-end and G>A at 3'-end are also displayed per strand.\r\n - misincorporation.txt, contains a table with occurrences for each type of mutations and relative positions from the reads ends.\r\n - 5pCtoT\\_freq.txt, contains frequencies of Cytosine to Thymine mutations per position from the 5'-ends.\r\n - 3pGtoA\\_freq.txt, contains frequencies of Guanine to Adenine mutations per position from the 3'-ends.\r\n - dnacomp.txt, contains a table of the reference genome base composition.\r\n - lgdistribution.txt, contains a table with read length distributions per strand.\r\n \r\nFor the statistical estimation:\r\n\r\n - Stats\\_out\\_MCMC\\_hist.pdf, MCMC histogram for the damage parameters and log likelihood.\r\n - Stats\\_out\\_MCMC\\_iter.csv, values for the damage parameters and log likelihood in each MCMC iteration.\r\n - Stats\\_out\\_MCMC\\_trace.pdf, a MCMC trace plot for the damage parameters and log likelihood. \r\n - Stats\\_out\\_MCMC\\_iter\\_summ\\_stat.csv, summary statistics for the damage parameters MCMC samples.\r\n - Stats\\_out\\_post\\_pred.pdf, empirical misincorporation frequency and predictive intervals from the fitted model.\r\n - Stats\\_out\\_MCMC\\_correct\\_prob.csv, position specific probability of a C.T and G.A misincorporation is due to damage.\r\n - Rescaled BAM file, where likely post-mortem damaged bases have downscaled quality scores. \r\n\r\n\r\nExamples and datasets\r\n---------------------\r\nA simple command line that would process the entire BAM file with plotting and statistic estimation is:\r\n\r\n    mapDamage -i mymap.bam -r myreference.fasta\r\n\r\nTo run the plotting part with a new scale to fit lower levels of DNA damages, 0.1 as y-limit instead of 0.3 by default:\r\n\r\n     mapDamage -d results_mydata -y 0.1 --plot-only\r\n\r\nTo run the statistic estimations using only the 5'-ends and with verbose output:\r\n\r\n     mapDamage -d results_mydata --forward --stats-only -v\r\n\r\n\r\nThe original web page with examples, datasets and result files is there:\r\n\r\nhttp://geogenetics.ku.dk/publications/mapdamage/\r\n\r\n\r\nUsage\r\n-----\r\n\r\n    Usage: mapDamage [options] -i BAMfile -r reference.fasta\r\n    \r\n    Use option -h or --help for help\r\n    \r\n    Options:\r\n\r\n       --version             show program's version number and exit\r\n       -h, --help            show this help message and exit\r\n\r\n    Input files:\r\n  \r\n        -i FILENAME, --input=FILENAME\r\n                             SAM/BAM file, must contain a valid header, use '-' for reading a BAM from stdin\r\n        -r REF, --reference=REF\r\n                            Reference file in FASTA format\r\n    General options:\r\n        -n DOWNSAMPLE, --downsample=DOWNSAMPLE\r\n                            Downsample to a randomly selected fraction of the reads (if 0 < DOWNSAMPLE < 1), \r\n                            or a fixed number of randomly selected reads (if DOWNSAMPLE >= 1). By default, \r\n                            no downsampling is performed.\r\n\t--downsample-seed   Seed value to use for downsampling. See documentation for py module 'random' for default behavior.\r\n        -l LENGTH, --length=LENGTH\r\n                            read length, in nucleotides to consider [70]\r\n        -a AROUND, --around=AROUND\r\n                            nucleotides to retrieve before/after reads [10]\r\n        -Q MINQUAL, --min-basequal=MINQUAL\r\n                            minimun base quality Phred score considered, Phred-33 assumed [0]\r\n        -d FOLDER, --folder=FOLDER\r\n                        folder name to store results [results_FILENAME]\r\n        -f, --fasta         Write alignments in a FASTA file\r\n        --plot-only         Run only plotting from a valid result folder\r\n        -q, --quiet         Disable any output to stdout\r\n        -v, --verbose       Display progression information during parsing\r\n\r\n    Options for graphics:\r\n\r\n        -y YMAX, --ymax=YMAX\r\n                            graphical y-axis limit for nucleotide misincorporation frequencies [0.3]\r\n        -m READPLOT, --readplot=READPLOT\r\n                            read length, in nucleotides, considered for plotting nucleotide \r\n                            misincorporations [25]\r\n        -b REFPLOT, --refplot=REFPLOT\r\n                            the number of reference nucleotides to consider for ploting base \r\n                            composition in the region located upstream and downstream of \r\n                            every read [10]\r\n        -t TITLE, --title=TITLE\r\n                            title used for both graph and filename [plot]\r\n\r\n    Options for the statistical estimation:\r\n\r\n        --rand=RAND         Number of random starting points for the likelihood optimization [30]\r\n        --burn=BURN         Number of burnin iterations [10000]\r\n        --adjust=ADJUST     Number of adjust proposal variance parameters iterations [10]\r\n        --iter=ITER         Number of final MCMC iterations [50000]\r\n        --forward=FORWARD   Using only the 5' end of the seqs [False]\r\n        --reverse=REVERSE   Using only the 3' end of the seqs [False]\r\n        --fix-disp=FIX_DISP Fix dispersion in the overhangs [True]\r\n        --diff-hangs        The overhangs are different for 5' and 3'  [False]\r\n        --fix-nicks=FIX_NICKS \r\n                            Fix the nick frequency vector nu else estimate it with GAM [False]\r\n        --jukes-cantor\t    Use Jukes Cantor instead of HKY85\r\n        --single_stranded=SINGLE_STRANDED\r\n                            Single stranded protocol [False]\r\n        --seq-length=SEQ_LENGTH\r\n                            How long sequence to use from each side [12]\r\n        --stats-only        Run only statistical estimation from a valid result folder\r\n        --rescale           Rescale the quality scores in the BAM file using the output from\r\n                            the statistical estimation\r\n        --rescale-only \t    Run only rescaling from a valid result folder\r\n        --no-stats          Disabled statistical estimation, active by default\r\n\r\nDescription of tables\r\n---------------------\r\n### misincorporation table\r\n\r\nThis file looks like:\r\n \r\n    # table produced by mapDamage version 2\r\n    # using mapped file hits_sort_mts.bam and NC_012920.fasta as reference file\r\n    # Chr: reference from sam/bam header, End: from which termini of DNA sequences, Std: strand of reads\r\n    Chr\tEnd\tStd\tPos\tA\tC\tG\tT\tTotal\tG>A\tC>T\tA>G\tT>C\tA>C\tA>T\tC>G\tC>A\tT>G\tT>A\tG>C\tG>T\tA>-\tT>-\tC>-\tG>-\t->A\t->T\t->C\t->G\tS\r\n    NC_012920.1\t3p\t+\t1\t424\t579\t201\t424\t1628\t48\t16\t3\t5\t1\t0\t2\t1\t0\t2\t1\t0\t0\t0\t0\t0\t4\t4\t1\t1\t0\r\n    NC_012920.1\t3p\t+\t2\t466\t535\t213\t404\t1618\t30\t12\t2\t1\t0\t1\t0\t0\t3\t3\t1\t0\t0\t0\t0\t0\t2\t6\t5\t7\t0\r\n    NC_012920.1\t3p\t+\t3\t514\t463\t223\t417\t1617\t35\t15\t3\t1\t1\t0\t0\t0\t1\t0\t1\t1\t0\t0\t0\t2\t9\t4\t4\t4\t0\r\n    NC_012920.1\t3p\t+\t4\t514\t483\t221\t400\t1618\t30\t11\t3\t4\t0\t1\t1\t0\t0\t1\t0\t1\t1\t0\t0\t2\t5\t5\t8\t2\t0\r\n\r\nThe first lines that start by a hash contain information about the options used while processing the data.\r\nThen, the table contains occurrences for each of the 12 mutation type + 4 deletions + 4 insertions + \r\nsoft-clipping, per reference (`Chr` column), per strand (`Std` column) , per end (`End` column) and per position (`Pos` column). \r\nIn Z>X, Z comes from the reference, X is the nucleotide from reads. Eventually, A, C, G, T come from the reference\r\nand Total is the sum of the four nucleotides. Frequencies depicted in Fragmisincorporation\\_plot.pdf file are computed per\r\nposition as follows\r\n\r\noccurrences of mutations / occurrences of the reference nucleotide \r\n\r\nin order to compensate for base composition bias.\r\n\r\nIn this example, for G>A at the first base from the 3'-ends and for the positive strand:\r\n`48 / 201 = 0.238806`\r\n\r\nThe Fragmisincorporation plot sums up misincorporations  for all references and strand orientations, finally \r\ndisplays the frequencies per position.  \r\n\r\n**5p** means reads analyzed from their 5'-ends and are depicted at the bottom left.\r\n  \r\n**3p** means reads analyzed from their 3'-ends and are depicted at the bottom right.\r\n\r\n**Remark concerning soft-clipping**:\r\n\r\nSoft-clipped bases are bases located at read extremities that are NOT aligned to the reference. \r\nThose bases are not taken into account and alignments are computed on aligned bases. \r\nHowever, the soft-clipped bases are recorded and displayed as an orange line as a diagnostic for users.\r\nEven if, the positions for those bases are different from positions of all misincorporations, they should warn\r\nusers that reads should be trimmed if soft-clipped base frequencies is high.\r\n\r\n\r\n### dnacomp table\r\n\r\nExample table below:\r\n \r\n    # table produced by mapDamage version 0.4.0\r\n    # using mapped file hits_sort_mts.bam and NC_012920.fasta as reference file\r\n    # Chr: reference from sam/bam header, End: from which termini of DNA sequences, Std: strand of reads\r\n    Chr\tEnd\tStd\tPos\tA\tC\tG\tT\tTotal\r\n    NC_012920.1\t3p\t+\t-70\t113\t77\t43\t181\t414\r\n    NC_012920.1\t3p\t+\t-69\t178\t140\t97\t233\t648\r\n    NC_012920.1\t3p\t+\t-68\t230\t145\t98\t219\t692\r\n    NC_012920.1\t3p\t+\t-67\t217\t157\t76\t272\t722\r\n    NC_012920.1\t3p\t+\t-66\t224\t188\t88\t239\t739\r\n    NC_012920.1\t3p\t+\t-65\t244\t165\t104\t262\t775\r\n    NC_012920.1\t3p\t+\t-64\t223\t185\t102\t288\t798\r\n\r\nThe first lines that start by a hash contain information about the options used while processing the data.\r\nThen, the table contains occurrences for each nucleotides, per reference (`Chr` column), \r\nper strand (`Std` column) , per end (`End` column) and per position (`Pos` column).\r\n\r\nAt a given position, base composition is recorded either for the reference or for reads depending \r\non the position and direction. The following table details which sequences and coordinates are \r\nused by default:\r\n\r\n| Positions       |      5p              |          3p          |\r\n|:---------------:|:--------------------:|:--------------------:|\r\n| negative values | reference, -10 to -1 | reads, -25 to -1     |\r\n| positive values | reads, +1 to +25     | reference, +1 to +10 |\r\n\r\n \r\n\r\n\r\nCitation\r\n--------\r\nIf you use this program, please cite the following publication:  \r\nJónsson H, Ginolhac A, Schubert M, Johnson P, Orlando L.\r\nmapDamage2.0: fast approximate Bayesian estimates of ancient DNA damage parameters.\r\n_Bioinformatics_ 2013. _in press_\r\n\r\n\r\nThe original mapDamage1 is described in the following article:  \r\nGinolhac A, Rasmussen M, Gilbert MT, Willerslev E, Orlando L.\r\nmapDamage: testing for damage patterns in ancient DNA sequences. _Bioinformatics_ 2011 **27**(15):2153-5\r\nhttp://bioinformatics.oxfordjournals.org/content/27/15/2153\r\n\r\n\r\nFAQ\r\n-----------\r\nQ: I got this error: could not find function \"ggtitle\"\r\n\r\nA: update your ggplot2 package to at least version 0.9.2 by running\r\nupdate.packages(\"ggplot2\") and selecting a CRAN mirror\r\n\r\nQ: How to clone the development version from github?\r\n\r\nA: Use the following commands\r\n> `git clone https://github.com/ginolhac/mapDamage.git mapDamage`  \r\n> `cd mapDamage` \r\n> `git submodule update --init`  \r\n\r\n\r\nContact\r\n-------\r\nPlease report bugs and suggest possible improvements to Aurélien Ginolhac, Mikkel Schubert or Hákon Jónsson by email:\r\naginolhac at snm.ku.dk, MSchubert at snm.ku.dk or jonsson.hakon at gmail.com.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}